version: "3"
networks:
    pulsar:
        driver: bridge
services:
    # Start zookeeper
    zookeeper:
        image: apachepulsar/pulsar:latest
        container_name: zookeeper
        restart: on-failure
        networks:
            - pulsar
        volumes:
            - ./mnt_data/zookeeper:/pulsar/data/zookeeper
        environment:
            - metadataStoreUrl=zk:zookeeper:2181
            - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m
        command: >
            bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
                   bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
                   exec bin/pulsar zookeeper"
        healthcheck:
            test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
            interval: 10s
            timeout: 5s
            retries: 30

    # Init cluster metadata
    pulsar-init:
        container_name: pulsar-init
        hostname: pulsar-init
        image: apachepulsar/pulsar:latest
        networks:
            - pulsar
        command: >
            bin/pulsar initialize-cluster-metadata \
                     --cluster cluster-a \
                     --zookeeper zookeeper:2181 \
                     --configuration-store zookeeper:2181 \
                     --web-service-url http://broker:8080 \
                     --broker-service-url pulsar://broker:6650
        depends_on:
            zookeeper:
                condition: service_healthy

    # Start bookie
    bookie:
        image: apachepulsar/pulsar:latest
        container_name: bookie
        restart: on-failure
        networks:
            - pulsar
        environment:
            - clusterName=cluster-a
            - zkServers=zookeeper:2181
            - metadataServiceUri=metadata-store:zk:zookeeper:2181
            - advertisedAddress=bookie
            - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
        depends_on:
            zookeeper:
                condition: service_healthy
            pulsar-init:
                condition: service_completed_successfully
        volumes:
            - ./mnt_data/bookkeeper:/pulsar/data/bookkeeper
        command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

    # Start broker
    broker:
        image: apachepulsar/pulsar:latest
        container_name: broker
        hostname: broker
        restart: on-failure
        networks:
            - pulsar
        environment:
            - metadataStoreUrl=zk:zookeeper:2181
            - zookeeperServers=zookeeper:2181
            - clusterName=cluster-a
            - managedLedgerDefaultEnsembleSize=1
            - managedLedgerDefaultWriteQuorum=1
            - managedLedgerDefaultAckQuorum=1
            - advertisedAddress=broker
            - advertisedListeners=external:pulsar://127.0.0.1:6650
            - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
        depends_on:
            zookeeper:
                condition: service_healthy
            bookie:
                condition: service_started
        ports:
            - "6650:6650"
            - "8080:8080"
        command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters" ]
            interval: 10s
            timeout: 5s
            retries: 5

    pulsar-manager:
        image: apachepulsar/pulsar-manager:latest
        container_name: pulsar-manager
        networks:
            - pulsar
        environment:
            - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
            - server.port=7750
            - jdbcDriverClassName=org.postgresql.Driver
            - jdbcUrl=jdbc:postgresql://postgres:5432/pulsar_manager
            - jdbcUsername=postgres
            - jdbcPassword=your_password
            - pulsar_admin_url=http://broker:8080
        depends_on:
            broker:
                condition: service_healthy
            postgres:
                condition: service_healthy
        ports:
            - "9527:9527" # Frontend service port
            - "7750:7750" # Backend service port

    postgres:
        image: postgres:12
        environment:
            POSTGRES_DB: pulsar_manager
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: your_password
        networks:
            - pulsar
        ports:
            - "5432:5432"
        volumes:
            - ./mnt_data/postgres:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
